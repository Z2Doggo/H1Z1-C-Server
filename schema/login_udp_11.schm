group Login
// TODO(rhett): maybe we'll specify stuff like opcode type like this for the whole group?
//endian little
// TODO(rhett): opcode can be variable length. think about this
//opcode u8
packet 0x1 LoginRequest
string:u32		session_id
string:u32		system_fingerprint
u32 			locale
u32 			third_party_auth_ticket
u32 			third_party_user_id
u32 			third_party_id

packet 0x2 LoginReply
b8           	is_logged_in
u32          	status
u32          	result_code
b8           	is_member
b8			 	is_internal
string:u32 	 	namespace_name
list:u32 account_features
{
    u32 	   	key
    u32        	id
    b8         	active
    u32        	remaining_count
    string:u32  raw_data
}
string:u32 application_payload
list:u32 error_details
{
    u32 		unknown_dword1
    string:u32 	name
    string:u32 	value
}
string:u32 		ip_country_code

packet 0x3 Logout

packet 0x4 ForceDisconnect

packet 0x5 CharacterCreateRequest
u32 			server_id
u32 			unk_u32

stream:u32 		char_payload
{

	u8 			empire_id
	u32 		head_type
	u32 		profile_type
	u32 		gender
	string:u32 	character_name
}

packet 0x6 CharacterCreateReply
u32 			status
u64 			character_id

packet 0x7 CharacterLoginRequest
u64 			character_id
u32 			server_id
u32 			status

stream:u32 		payload2
{

	string:u32	locale
	u32 		locale_id
	u32 		preferred_gateway_id
}

packet 0x8 CharacterLoginReply
u64 			character_id
u32 			server_id
u32 			last_login
u32 			status

stream:u32 login_payload
{    
    u8 unk_byte_1
    u8 unk_byte_2
	string:u32 	server_address
	string:u32 	server_ticket
	bytes:u32 	encryption_key
	u32 		soe_protocol_version
	u64 		character_id
	u64 		unk_u64
	string:u32 	station_name
	string:u32 	character_name
	string:u32 	unk_str
	u64 	    server_feature_bit
}

packet 0x9 CharacterDeleteRequest
u64 character_id

packet 0x10 TunnelAppPacketClientToServer
u32 			server_id
u32 			unk1

stream:u32 		data_client
{
	b8 				tunnel_op_code
	b8 				sub_op_code
	string:u32 		character_name
}

packet 0x11 TunnelAppPacketServerToClient
u32 			server_id
u32 			unk1

stream:u32 		data_server
{
	b8 				tunnel_op_code
	b8 				sub_op_code
	string:u32 		character_name
	string:u32 		character_name2
	u32 			status
}

packet 0x12 CharacterTransferRequest

packet 0x13 CharacterTransferReply

packet 0x0a CharacterDeleteReply
u64 			character_id
u32 			status
bytes:u32  		payload3

packet 0xb CharacterSelectInfoRequest

packet 0xc CharacterSelectInfoReply
u32 			character_status
b8 				can_bypass_server_lock

list:u32 characters
{
    u64 character_id
    u32 server_id
    u64 last_login_date
    u32 null_field
    u32 status
	stream:u32 payload4
	{
		string:u32 name
		u8 empire_id
		u32 battle_rank
		u32	next_battle_rank_percent
		u32	head_id
		u32	model_id
		u32	gender
		u32	profile_id
		u32	unknown_dword

        // loadout_data
        u32 loadout_id
		
        // unknown_data_1
        u32 unknown_dword_1
        u8 unknown_byte_1
        u32 unknown_dword_2
		
        // unknown_data_2
		u32 unknown_dword_3
        string:u32 loadout_name
        u32 tint_item_id
        u32 unknown_dword_4
        u32 decal_item_id

		list:u32 loadout_slots
		{
            u32 slot_id
			
            // loadout_slot_data
            u32 index
			
            // unknown_data_1
            u32 item_line_id
            u8 flags

			list:u32 attachments
            {
                u32 attachment_id
            }

			list:u32 attachment_classes
            {
                u32 class_id
                u32 attachment_id
            }
			
			u32 tint_item_id
            u32 item_slot
		}
		
		list:u32 item_definitions
        {
            u32 item_id
			
			// item_definition_data
            u32 item_id_2
            u16 flags_1
            u32 name_id
            u32 description_id
            u32 unknown_dword_1
            u32 icon_id
            u32 unknown_dword_2
            u32 hudImageSetId
            u32 hud_image_set_id
            u32 unknown_dword_4
            u32 cost
            u32 item_class
            u32 unknown_dword_5
            u32 item_slot
            u32 slot_override_key
            u8 unknown_dword6
            string:u32 model_name
            string:u32 unknown_string
            u8 unknown_byte_1
            u32 item_type
            u32 category_id
            u32 unknown_dword_7
            u32 unknown_dword_8
            u32 unknown_dword_9
            u32 unknown_dword_10
            u32 unknown_dword_11
            u32 activatable_ability_id
            u32 passive_ability_id
            u32 unknown_dword_12
            u32 max_stack_size
            string:u32 tint_name
            u32 unknown_dword_13
            u32 unknown_dword_14
            u32 unknown_dword_15
            u32 unknown_dword_16
            u32 ui_model_camera
            u32 equip_count_max
            u32 currency_type
            u32 unknown_dword_17
            u32 client_item_type
            u32 skill_set_id
            string:u32 overlay_texture
            string:u32 decal_slot
            u32 unknown_dword_18
            u32 trial_duration_sec
            u32 trial_exclusion_sec
            u32 client_use_requirement_id
            string:u32 override_appearance
            u32 unknown_dword_19
            u32 client_use_requirement_id_2
        }

			list:u32 attachment_definitions
			{
				u32 attachment_id
				// attachmentData
				u32 attachment_id_2
				u32 group_id
				u32 item_line_id
				u8 flags
				
				list:u32 classes
				{
					u32 element_type
				}
			}
		u64 last_use_date
	}
}

packet 0xd ServerListRequest

packet 0xe ServerListReply
list:u32 servers
{
	u32 			id
	u32 			state
	b8  			is_locked
	string:u32 		name
	u32 			name_id
	string:u32 		description
	u32 			description_id
	u32 			req_feature_id
	string:u32 		server_info
	u32 			population_level
	string:u32 		population_data
	string:u32 		access_expression
	b8 				is_access_allowed
}

packet 0xf ServerUpdate


